(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{206:function(v,t,_){"use strict";_.r(t);var d=_(0),a=Object(d.a)({},(function(){var v=this,t=v.$createElement,_=v._self._c||t;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("p",[v._v("用于让用户在不同的视图中进行切换。")]),v._v(" "),_("h3",{attrs:{id:"scrolltab"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#scrolltab"}},[v._v("#")]),v._v(" ScrollTab")]),v._v(" "),_("table",[_("thead",[_("tr",[_("th",[v._v("属性")]),v._v(" "),_("th",[v._v("说明")]),v._v(" "),_("th",[v._v("类型")]),v._v(" "),_("th",[v._v("默认值")]),v._v(" "),_("th",[v._v("必选")])])]),v._v(" "),_("tbody",[_("tr",[_("td",[v._v("tabs")]),v._v(" "),_("td",[v._v("tab数据")]),v._v(" "),_("td",[v._v("TabData[]")]),v._v(" "),_("td"),v._v(" "),_("td",[v._v("true")])]),v._v(" "),_("tr",[_("td",[v._v("visibleTabsCount")]),v._v(" "),_("td",[v._v("显示在屏幕中的标签数量 默认3个 取tabs长度和visibleTabsCount的最小值")]),v._v(" "),_("td",[v._v("number")]),v._v(" "),_("td"),v._v(" "),_("td",[v._v("false")])]),v._v(" "),_("tr",[_("td",[v._v("tabScrollEnable")]),v._v(" "),_("td",[v._v("tabs标签scrollview是否能滚动, 不设置会默认根据内容是否超出标签的scrollview容器来判断")]),v._v(" "),_("td",[v._v("boolean")]),v._v(" "),_("td"),v._v(" "),_("td",[v._v("false")])]),v._v(" "),_("tr",[_("td",[v._v("tabBarPosition")]),v._v(" "),_("td",[v._v("TabBar位置")]),v._v(" "),_("td",[v._v("'top' | 'bottom'")]),v._v(" "),_("td",[v._v("top")]),v._v(" "),_("td",[v._v("false")])]),v._v(" "),_("tr",[_("td",[v._v("renderTabBar")]),v._v(" "),_("td",[v._v("替换TabBar")]),v._v(" "),_("td",[v._v("((props: TabBarPropsType) => React.ReactNode) | false")]),v._v(" "),_("td"),v._v(" "),_("td",[v._v("false")])]),v._v(" "),_("tr",[_("td",[v._v("initialPage")]),v._v(" "),_("td",[v._v("初始化Tab, index or key")]),v._v(" "),_("td",[v._v("number | string")]),v._v(" "),_("td"),v._v(" "),_("td",[v._v("false")])]),v._v(" "),_("tr",[_("td",[v._v("page")]),v._v(" "),_("td",[v._v("当前Tab, index or key")]),v._v(" "),_("td",[v._v("number | string")]),v._v(" "),_("td"),v._v(" "),_("td",[v._v("false")])]),v._v(" "),_("tr",[_("td",[v._v("swipeable")]),v._v(" "),_("td",[v._v("是否可以滑动内容切换")]),v._v(" "),_("td",[v._v("boolean")]),v._v(" "),_("td",[v._v("true")]),v._v(" "),_("td",[v._v("false")])]),v._v(" "),_("tr",[_("td",[v._v("useOnPan")]),v._v(" "),_("td",[v._v("使用跟手滚动")]),v._v(" "),_("td",[v._v("boolean")]),v._v(" "),_("td",[v._v("true")]),v._v(" "),_("td",[v._v("false")])]),v._v(" "),_("tr",[_("td",[v._v("prerenderingSiblingsNumber")]),v._v(" "),_("td",[v._v("预加载两侧Tab数量")]),v._v(" "),_("td",[v._v("number")]),v._v(" "),_("td",[v._v("1")]),v._v(" "),_("td",[v._v("false")])]),v._v(" "),_("tr",[_("td",[v._v("animated")]),v._v(" "),_("td",[v._v("是否开启切换动画")]),v._v(" "),_("td",[v._v("boolean")]),v._v(" "),_("td",[v._v("true")]),v._v(" "),_("td",[v._v("false")])]),v._v(" "),_("tr",[_("td",[v._v("onChange")]),v._v(" "),_("td",[v._v("tab变化时触发")]),v._v(" "),_("td",[v._v("(tab:  TabData, index: number) => void")]),v._v(" "),_("td"),v._v(" "),_("td",[v._v("false")])]),v._v(" "),_("tr",[_("td",[v._v("onTabClick")]),v._v(" "),_("td",[v._v("tab 被点击的回调")]),v._v(" "),_("td",[v._v("(tab:  TabData, index: number) => void")]),v._v(" "),_("td"),v._v(" "),_("td",[v._v("false")])]),v._v(" "),_("tr",[_("td",[v._v("destroyInactiveTab")]),v._v(" "),_("td",[v._v("销毁超出范围Tab")]),v._v(" "),_("td",[v._v("boolean")]),v._v(" "),_("td",[v._v("false")]),v._v(" "),_("td",[v._v("false")])]),v._v(" "),_("tr",[_("td",[v._v("distanceToChangeTab")]),v._v(" "),_("td",[v._v("滑动切换阈值(宽度比例)")]),v._v(" "),_("td",[v._v("number")]),v._v(" "),_("td",[v._v("0.3")]),v._v(" "),_("td",[v._v("false")])]),v._v(" "),_("tr",[_("td",[v._v("usePaged")]),v._v(" "),_("td",[v._v("是否启用分页模式")]),v._v(" "),_("td",[v._v("boolean")]),v._v(" "),_("td",[v._v("true")]),v._v(" "),_("td",[v._v("false")])]),v._v(" "),_("tr",[_("td",[v._v("tabBarUnderlineStyle")]),v._v(" "),_("td",[v._v("tabBar下划线样式")]),v._v(" "),_("td",[v._v("React.CSSProperties | any")]),v._v(" "),_("td"),v._v(" "),_("td",[v._v("false")])]),v._v(" "),_("tr",[_("td",[v._v("tabBarBackgroundColor")]),v._v(" "),_("td",[v._v("tabBar背景色")]),v._v(" "),_("td",[v._v("string")]),v._v(" "),_("td"),v._v(" "),_("td",[v._v("false")])]),v._v(" "),_("tr",[_("td",[v._v("tabBarActiveTextColor")]),v._v(" "),_("td",[v._v("tabBar激活Tab文字颜色")]),v._v(" "),_("td",[v._v("string")]),v._v(" "),_("td"),v._v(" "),_("td",[v._v("false")])]),v._v(" "),_("tr",[_("td",[v._v("tabBarInactiveTextColor")]),v._v(" "),_("td",[v._v("tabBar非激活Tab文字颜色")]),v._v(" "),_("td",[v._v("string")]),v._v(" "),_("td"),v._v(" "),_("td",[v._v("false")])]),v._v(" "),_("tr",[_("td",[v._v("tabBarTextStyle")]),v._v(" "),_("td",[v._v("tabBar文字样式")]),v._v(" "),_("td",[v._v("React.CSSProperties | any")]),v._v(" "),_("td"),v._v(" "),_("td",[v._v("false")])]),v._v(" "),_("tr",[_("td",[v._v("renderTab")]),v._v(" "),_("td",[v._v("替换TabBar的Tab")]),v._v(" "),_("td",[v._v("(tab:  TabData) => React.ReactNode")]),v._v(" "),_("td"),v._v(" "),_("td",[v._v("false")])]),v._v(" "),_("tr",[_("td",[v._v("renderUnderline")]),v._v(" "),_("td",[v._v("renderUnderline")]),v._v(" "),_("td",[v._v("(style: any) => React.ReactNode")]),v._v(" "),_("td"),v._v(" "),_("td",[v._v("false")])])])]),v._v(" "),_("h3",{attrs:{id:"defaulttabs"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#defaulttabs"}},[v._v("#")]),v._v(" .DefaultTabs")]),v._v(" "),_("table",[_("thead",[_("tr",[_("th",[v._v("属性")]),v._v(" "),_("th",[v._v("说明")]),v._v(" "),_("th",[v._v("类型")]),v._v(" "),_("th",[v._v("默认值")]),v._v(" "),_("th",[v._v("必选")])])]),v._v(" "),_("tbody",[_("tr",[_("td",[v._v("goToTab")]),v._v(" "),_("td",[v._v("跳转Tab")]),v._v(" "),_("td",[v._v("(index: number) => boolean")]),v._v(" "),_("td"),v._v(" "),_("td",[v._v("true")])]),v._v(" "),_("tr",[_("td",[v._v("tabs")]),v._v(" "),_("td",[v._v("tab数据")]),v._v(" "),_("td",[v._v("TabData[]")]),v._v(" "),_("td"),v._v(" "),_("td",[v._v("true")])]),v._v(" "),_("tr",[_("td",[v._v("activeTab")]),v._v(" "),_("td",[v._v("当前激活Tab索引")]),v._v(" "),_("td",[v._v("number")]),v._v(" "),_("td"),v._v(" "),_("td",[v._v("true")])]),v._v(" "),_("tr",[_("td",[v._v("animated")]),v._v(" "),_("td",[v._v("是否使用动画")]),v._v(" "),_("td",[v._v("boolean")]),v._v(" "),_("td"),v._v(" "),_("td",[v._v("true")])]),v._v(" "),_("tr",[_("td",[v._v("renderTab")]),v._v(" "),_("td",[v._v("替换TabBar的Tab")]),v._v(" "),_("td",[v._v("(tab: TabData) => React.ReactNode")]),v._v(" "),_("td"),v._v(" "),_("td",[v._v("false")])]),v._v(" "),_("tr",[_("td",[v._v("page")]),v._v(" "),_("td",[v._v("Tab分页尺寸")]),v._v(" "),_("td",[v._v("number")]),v._v(" "),_("td",[v._v("5")]),v._v(" "),_("td",[v._v("false")])]),v._v(" "),_("tr",[_("td",[v._v("onTabClick")]),v._v(" "),_("td",[v._v("tab 被点击的回调")]),v._v(" "),_("td",[v._v("(tab: TabData, index: number) => void")]),v._v(" "),_("td"),v._v(" "),_("td",[v._v("false")])])])]),v._v(" "),_("h3",{attrs:{id:"tabs"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#tabs"}},[v._v("#")]),v._v(" .Tabs")]),v._v(" "),_("table",[_("thead",[_("tr",[_("th",[v._v("属性")]),v._v(" "),_("th",[v._v("说明")]),v._v(" "),_("th",[v._v("类型")]),v._v(" "),_("th",[v._v("默认值")]),v._v(" "),_("th",[v._v("必选")])])]),v._v(" "),_("tbody",[_("tr",[_("td",[v._v("tabs")]),v._v(" "),_("td",[v._v("tab数据")]),v._v(" "),_("td",[v._v("TabData[]")]),v._v(" "),_("td"),v._v(" "),_("td",[v._v("true")])]),v._v(" "),_("tr",[_("td",[v._v("activeTab")]),v._v(" "),_("td",[v._v("当前选中tab索引")]),v._v(" "),_("td",[v._v("number")]),v._v(" "),_("td"),v._v(" "),_("td",[v._v("true")])]),v._v(" "),_("tr",[_("td",[v._v("visibleTabsCount")]),v._v(" "),_("td",[v._v("显示在屏幕中的标签数量 默认3个 取tabs长度和visibleTabsCount的最小值")]),v._v(" "),_("td",[v._v("number")]),v._v(" "),_("td",[v._v("3")]),v._v(" "),_("td")]),v._v(" "),_("tr",[_("td",[v._v("scrollEnable")]),v._v(" "),_("td",[v._v("是否允许滚动标签")]),v._v(" "),_("td",[v._v("boolean")]),v._v(" "),_("td"),v._v(" "),_("td",[v._v("false")])]),v._v(" "),_("tr",[_("td",[v._v("renderTab")]),v._v(" "),_("td",[v._v("自定义替换Tabs的标签")]),v._v(" "),_("td",[v._v("(item: TabData, index: number) => React.ReactNode")]),v._v(" "),_("td",[v._v("无")]),v._v(" "),_("td")]),v._v(" "),_("tr",[_("td",[v._v("onChange")]),v._v(" "),_("td",[v._v("tab 被点击的回调")]),v._v(" "),_("td",[v._v("(tab: TabData, index: number) => void")]),v._v(" "),_("td",[v._v("无")]),v._v(" "),_("td")]),v._v(" "),_("tr",[_("td",[v._v("underlineStyle")]),v._v(" "),_("td",[v._v("指示器样式")]),v._v(" "),_("td",[v._v("StyleProp")]),v._v(" "),_("td",[v._v("无")]),v._v(" "),_("td")]),v._v(" "),_("tr",[_("td",[v._v("seperator")]),v._v(" "),_("td",[v._v("自定义底部线条")]),v._v(" "),_("td",[v._v("React.ReactNode")]),v._v(" "),_("td",[v._v("无")]),v._v(" "),_("td")]),v._v(" "),_("tr",[_("td",[v._v("seperatorStyle")]),v._v(" "),_("td",[v._v("底部线条样式")]),v._v(" "),_("td",[v._v("StyleProp")]),v._v(" "),_("td",[v._v("无")]),v._v(" "),_("td")]),v._v(" "),_("tr",[_("td",[v._v("backgroundColor")]),v._v(" "),_("td",[v._v("背景色")]),v._v(" "),_("td",[v._v("string")]),v._v(" "),_("td",[v._v("无")]),v._v(" "),_("td")]),v._v(" "),_("tr",[_("td",[v._v("activeTextColor")]),v._v(" "),_("td",[v._v("选中文字颜色")]),v._v(" "),_("td",[v._v("string")]),v._v(" "),_("td",[v._v("无")]),v._v(" "),_("td")]),v._v(" "),_("tr",[_("td",[v._v("inactiveTextColor")]),v._v(" "),_("td",[v._v("未选中文字颜色")]),v._v(" "),_("td",[v._v("string")]),v._v(" "),_("td",[v._v("无")]),v._v(" "),_("td")]),v._v(" "),_("tr",[_("td",[v._v("activeTextStyle")]),v._v(" "),_("td",[v._v("未选中文字样式")]),v._v(" "),_("td",[v._v("StyleProp")]),v._v(" "),_("td",[v._v("无")]),v._v(" "),_("td")]),v._v(" "),_("tr",[_("td",[v._v("inActiveTextStyle?")]),v._v(" "),_("td",[v._v("选中文字样式")]),v._v(" "),_("td",[v._v("StyleProp")]),v._v(" "),_("td",[v._v("无")]),v._v(" "),_("td")])])])])}),[],!1,null,null,null);t.default=a.exports}}]);